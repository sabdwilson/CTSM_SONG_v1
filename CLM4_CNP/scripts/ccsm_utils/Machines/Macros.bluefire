#===============================================================================
# The following always need to be set
# USE_MPISERIAL    Whether to build and use mpiserial lib or not. [values TRUE FALSE]
# SMP              Set to TRUE to enable building in SMP mode (uses OpenMP).  
# USER_CPPDEFS     CPP definitions (non platform dependent)
#
#===============================================================================

#===============================================================================
# Set general compile options
#===============================================================================
# Makefile macros for AIX
#
# Notes:  (see xlf user's guide for the details)
#  -lmass          => IBM-tuned intrinsic lib
#  -qsmp=noauto    => enable SMP directives, but don't add any
#  -qsmp=omp       => enable SMP directives, strict omp
#  -qstrict        => don't turn divides into multiplies, etc
#  -qhot           => higher-order-transformations (eg. loop padding)
#  -qalias=noaryoverlp => assume no array overlap wrt equivalance, etc
#  -qmaxmem=-1     => memory available to compiler during optimization
#  -qipa=level=2   => InterProcedure Analysis (eg. inlining) => slow compiles
#  -p -pg          => enable profiling (use in both FFLAGS and LDFLAGS)
#  -qreport        => for smp/omp only
#  -bmaxdata:0x80000000 => use maximum allowed data segment size
#  -g              => always leave it on because overhead is minimal (?)
#  -qflttrap=...   => enable default sigtrap (core dump)
#  -C              => runtime array bounds checking (runs slow)
#  -qinitauto=...  => initializes automatic variables
#
# The following macros are set by CAM's configure script.  
# They should only be hand edited by experts.
#
# Use the thread-safe compilers even when disabling openMP.
#===============================================================================

# Note that CPPDEFS is set in Macros.cppdefs
CPPDEFS += -DAIX -DSEQ_$(FRAMEWORK) -DFORTRAN_SAME

ifeq ($(strip $(DEBUG)),TRUE)
   CPPDEFS += -DNO_SHR_VMATH
endif
ifeq ($(compile_threaded), true)
   CPPDEFS += -DTHREADED_OMP
endif

cpre = $(null)-WF,-D$(null)
FPPDEFS := $(patsubst -D%,$(cpre)%,$(CPPDEFS)) 

SFC := xlf95_r
SCC := cc_r
MPIFC:=mpxlf95_r
MPICC:=mpcc_r

LD            := $(FC)

NETCDF_PATH   := $(NETCDF)
INC_NETCDF    := $(NETCDF_PATH)/include
LIB_NETCDF    := $(NETCDF_PATH)/lib
MOD_NETCDF    := $(NETCDF_PATH)/include

PNETCDF_PATH  := /contrib/parallel-netcdf-1.1.1svn
LIB_PNETCDF   := $(PNETCDF_PATH)/lib
LAPACK_LIBDIR := /usr/local/lib

CFLAGS        :=  -q64 -O2 
FIXEDFLAGS    := -qsuffix=f=f -qfixed=132
FREEFLAGS     := -qsuffix=f=f90:cpp=F90 
FFLAGS        :=  -q64 -g -qfullpath -qmaxmem=-1 -qarch=auto -qtune=auto -qsigtrap=xl__trcedump  -qsclk=micro
FFLAGS_NOOPT  := $(FFLAGS)
FLAGS_OPT     := -O2 -qstrict -Q
LDFLAGS       := -q64 -bdatapsize:64K -bstackpsize:64K -btextpsize:32K
SLIBS := $(shell nc-config --flibs)
AR            := ar
MOD_SUFFIX    := mod
CONFIG_SHELL  := /usr/local/bin/bash
PIO_CONFIG_OPTS := --enable-filesystem-hints=gpfs
# Used for COSP simulators
FC_AUTO_R8      := -qrealsize=8

#===============================================================================
# Set include paths (needed after override for any model specific builds below)
#===============================================================================

INCLDIR := -I. -I/usr/include
ifneq ($(strip $(INC_NETCDF)),)
  INCLDIR += -I$(INC_NETCDF)
endif
ifneq ($(strip $(MOD_NETCDF)),)
  INCLDIR += -I$(MOD_NETCDF)
endif
ifneq ($(strip $(INC_MPI)),)
  INCLDIR += -I$(INC_MPI)
endif 
ifneq ($(strip $(INC_PNETCDF)),)
  INCLDIR += -I$(INC_PNETCDF)
endif

# IBM specific update to system libraries
ifeq ($(strip $(DEBUG)),TRUE)
  SLIBS += -lmassv -lessl
else
  SLIBS += -lmass -lmassv -lessl
endif

#===============================================================================
# Set model and other specific options
# NOTE - all CPPDEFS options must be defined before this point
#===============================================================================

ifeq ($(strip $(MODEL)),cam)
   FFLAGS += -qspillsize=2500 
   ifeq ($(strip $(LIBROOT)),)
      # the following is needed for the current cam build where no separate
      # libraries are built - if clm is currently built with -O3, irreproducible
      # results occur - this should be removed once the cam adopts a build with
      # separate libraries for each component 
      FLAGS_OPT := -O2 -qstrict -Q
   endif 
endif
ifeq ($(strip $(MODEL)),pop2)
   FFLAGS +=  -qalias=noaryovrlp -qcache=auto -qnosave 
endif

# Set flags specific to debug mode
ifeq ($(strip $(DEBUG)),TRUE)
   FFLAGS       += -qinitauto=7FF7FFFF -qflttrap=ov:zero:inv:en -qspillsize=4000
   FFLAGS_NOOPT += -qinitauto=7FF7FFFF -qflttrap=ov:zero:inv:en -qspillsize=4000
   bounds := true
   ifeq ($(strip $(MODEL)),cam)
      bounds := false	
   endif
   ifeq ($(strip $(MODEL)),cice)
      bounds := false
   endif	
   ifeq ($(strip $(MODEL)),clm)
      bounds := false
   endif	
   ifeq ($(bounds),true)	
      FFLAGS += -C
   endif
else
   FFLAGS += $(FLAGS_OPT)
endif

ifeq ($(strip $(compile_threaded)),true)
  FFLAGS_NOOPT += -qsmp=omp:noopt

  # -qsmp implicitly turns on -O2.  Explicitly disable this for debugging.
  ifeq ($(DEBUG),TRUE)
    FFLAGS   += -qsmp=omp:noopt
    CFLAGS   += -qsmp=omp:noopt
    LDFLAGS  += -qsmp=omp:noopt
  else
    FFLAGS   += -qsmp=omp
    CFLAGS   += -qsmp=omp
    LDFLAGS  += -qsmp=omp
  endif
endif





