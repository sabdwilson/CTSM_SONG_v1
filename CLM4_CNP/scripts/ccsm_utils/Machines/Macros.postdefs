ifeq ($(USE_MPISERIAL),TRUE)
   CC := $(SCC)
   FC := $(SFC)
   MPIFC := $(SFC)
   MPICC := $(SCC)
   INC_MPI    := $(CODEROOT)/utils/mct/mpi-serial
   LIB_MPI    := 
   ifneq ($(strip $(MCT_LIBDIR)),)
      CONFIG_ARGS += --enable-mpiserial --disable-netcdf4 MCT_PATH=$(MCT_LIBDIR)
      INCLDIR += -I$(MCT_LIBDIR)/mpi-serial
   endif
else
   CC := $(MPICC)
   FC := $(MPIFC)
   ifneq ($(strip $(MPI_PATH)),)
     INC_MPI    := $(MPI_PATH)/include
     LIB_MPI    := $(MPI_PATH)/lib
   endif
endif


#===============================================================================
# Set include paths (needed after override for any model specific builds below)
#===============================================================================

INCLDIR += -I. 
ifneq ($(strip $(INC_NETCDF)),)
INCLDIR += -I$(INC_NETCDF)
endif
ifneq ($(strip $(MOD_NETCDF)),)
INCLDIR += -I$(MOD_NETCDF)
endif
ifneq ($(strip $(INC_MPI)),)
INCLDIR += -I$(INC_MPI)
endif 
ifneq ($(strip $(INC_PNETCDF)),)
INCLDIR += -I$(INC_PNETCDF)
endif

ifeq ($(MODEL),driver)
  INCLDIR += -I$(EXEROOT)/atm/obj -I$(EXEROOT)/lnd/obj -I$(EXEROOT)/ice/obj -I$(EXEROOT)/ocn/obj -I$(EXEROOT)/glc/obj
endif

ifeq ($(strip $(MCT_LIBDIR)),)
  MCT_LIBDIR=$(EXEROOT)/mct
endif

ifeq ($(strip $(PIO_LIBDIR)),)
  PIO_LIBDIR=$(EXEROOT)/pio
endif


INCLDIR +=  -I$(MCT_LIBDIR)/mct -I$(MCT_LIBDIR)/mpeu -I$(PIO_LIBDIR) -I$(CODEROOT)/utils/pio

#
# Use the MCT dir for the cache for all configure calls because it is the first one 
#

CONFIG_ARGS +=  CC="$(SCC)" FC="$(SFC)" MPICC="$(MPICC)" \
                MPIFC="$(MPIFC)" FCFLAGS="$(FFLAGS) $(FREEFLAGS) $(INCLDIR)" \
                CPPDEFS="$(CPPDEFS)" CFLAGS="$(CFLAGS) -I.. $(INCLDIR)" \
                NETCDF_PATH=$(NETCDF_PATH) LDFLAGS="$(LDFLAGS)"
ifneq ($(strip $(PNETCDF_PATH)),)
 CONFIG_ARGS+= PNETCDF_PATH=$(PNETCDF_PATH)
endif

ifneq ($(strip $(PIO_CONFIG_OPTS)),)
  CONFIG_ARGS += $(PIO_CONFIG_OPTS)
endif 

CFLAGS+=$(CPPDEFS)
FFLAGS+=$(FPPDEFS)

ifeq ($(MODEL),cam)
   # These RRTMG files take an extraordinarily long time to compile with optimization.
   # Until mods are made to read the data from files, just remove optimization from
   # their compilation.
rrtmg_lw_k_g.o: rrtmg_lw_k_g.f90
	$(FC) -c $(FPPFLAGS) $(INCLDIR) $(INCS) $(FREEFLAGS) $(FFLAGS_NOOPT) $<
rrtmg_sw_k_g.o: rrtmg_sw_k_g.f90
	$(FC) -c $(FPPFLAGS) $(INCLDIR) $(INCS) $(FREEFLAGS) $(FFLAGS_NOOPT) $<

   # The following rules are for the COSP simulator code:

F90             := $(FC)
F90FLAGS         = $(INCLDIR) $(INCS) $(FREEFLAGS) $(FFLAGS) $(FC_AUTO_R8)
F90FLAGS_noauto  = $(INCLDIR) $(INCS) $(FREEFLAGS) $(FFLAGS)
F90FLAGS_fixed   = $(INCLDIR) $(INCS) $(FIXEDFLAGS) $(FFLAGS) $(FC_AUTO_R8)

array_lib.o : array_lib.f90 mrgrnk.o
	$(F90) $(F90FLAGS) -c $<

atmos_lib.o : atmos_lib.f90
	$(F90) $(F90FLAGS) -c $<

cosp.o : cosp.F90 cosp_simulator.o cosp_types.o cosp_modis_simulator.o
	$(F90) $(F90FLAGS) -c $<

cosp_constants.o : cosp_constants.F90
	$(F90) $(F90FLAGS) -c  $<

cosp_isccp_simulator.o : cosp_isccp_simulator.F90 cosp_constants.o cosp_types.o
	$(F90) $(F90FLAGS) -c  $<

cosp_lidar.o : cosp_lidar.F90 cosp_constants.o cosp_types.o
	$(F90) $(F90FLAGS) -c  $<

cosp_misr_simulator.o : cosp_misr_simulator.F90 cosp_constants.o cosp_types.o
	$(F90) $(F90FLAGS) -c  $<

cosp_modis_simulator.o : cosp_modis_simulator.F90 cosp_constants.o cosp_types.o modis_simulator.o 
	$(F90) $(F90FLAGS) -c  $<

cosp_radar.o : cosp_radar.F90 cosp_constants.o cosp_types.o radar_simulator_types.o array_lib.o atmos_lib.o format_input.o math_lib.o optics_lib.o
	$(F90) $(F90FLAGS) -c $<

cosp_simulator.o: cosp_simulator.F90 cosp_types.o cosp_radar.o cosp_lidar.o cosp_isccp_simulator.o cosp_misr_simulator.o cosp_modis_simulator.o cosp_stats.o 
	$(F90) $(F90FLAGS) -c $<

cosp_stats.o : cosp_stats.F90 cosp_constants.o cosp_types.o llnl_stats.o lmd_ipsl_stats.o
	$(F90) $(F90FLAGS) -c $<

cosp_types.o : cosp_types.F90 cosp_constants.o cosp_utils.o radar_simulator_types.o
	$(F90) $(F90FLAGS) -c  $<

cosp_utils.o : cosp_utils.F90 cosp_constants.o
	$(F90) $(F90FLAGS) -c  $<

dsd.o : dsd.f90 array_lib.o math_lib.o
	$(F90) $(F90FLAGS) -c $<

format_input.o : format_input.f90 array_lib.o
	$(F90) $(F90FLAGS) -c $<

gases.o : gases.f90
	$(F90) $(F90FLAGS) -c $<

icarus.o : icarus.f90
	$(F90) $(F90FLAGS_fixed) -c $<

lidar_simulator.o : lidar_simulator.F90
	$(F90) $(F90FLAGS) -c $<

llnl_stats.o : llnl_stats.F90 cosp_constants.o
	$(F90) $(F90FLAGS) -c $<

lmd_ipsl_stats.o : lmd_ipsl_stats.F90 llnl_stats.o
	$(F90) $(F90FLAGS) -c $<

load_hydrometeor_classes.o : load_hydrometeor_classes.f90 radar_simulator_types.o
	$(F90) $(F90FLAGS) -c $<

math_lib.o : math_lib.f90 array_lib.o mrgrnk.o
	$(F90) $(F90FLAGS) -c $<

MISR_simulator.o : MISR_simulator.f90
	$(F90) $(F90FLAGS_fixed) -c $<

modis_simulator.o : modis_simulator.F90 cosp_types.o abortutils.o
	$(F90) $(F90FLAGS) -c $<

mrgrnk.o : mrgrnk.f90
	$(F90) $(F90FLAGS_noauto) -c $<

optics_lib.o : optics_lib.f90
	$(F90) $(F90FLAGS) -c $<

pf_to_mr.o : pf_to_mr.f90
	$(F90) $(F90FLAGS_fixed) -c $<

prec_scops.o : prec_scops.f90
	$(F90) $(F90FLAGS_fixed) -c $<

radar_simulator_types.o : radar_simulator_types.f90 array_lib.o math_lib.o mrgrnk.o optics_lib.o radar_simulator_types.o
	$(F90) $(F90FLAGS) -c $<

radar_simulator.o : radar_simulator.f90 array_lib.o math_lib.o mrgrnk.o optics_lib.o radar_simulator_types.o
	$(F90) $(F90FLAGS) -c $<

scops.o : scops.f90
	$(F90) $(F90FLAGS_fixed) -c $<

zeff.o : zeff.f90 math_lib.o optics_lib.o
	$(F90) $(F90FLAGS) -c $<

endif
