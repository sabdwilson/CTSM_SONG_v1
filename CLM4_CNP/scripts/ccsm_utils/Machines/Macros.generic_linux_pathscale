#===============================================================================
# The following always need to be set
# SPMD             Whether to build in SPMD mode or not.  [values TRUE FALSE]
# SMP              Set to TRUE to enable building in SMP mode (uses OpenMP).  
# USER_CPPDEFS     CPP definitions (non platform dependent)
#
#===============================================================================

# Note that CPPDEFS is set in Macros.cppdefs
CPPDEFS += -DLINUX -DSEQ_$(FRAMEWORK) -DFORTRANUNDERSCORE -DNO_R16 -DNO_SHR_VMATH 

ifeq ($(compile_threaded), true)
   CPPDEFS += -DTHREADED_OMP
endif

# Note, this is for a generic linux machine on a XT machine you
# need to use the "ftn" compiler and setup the modules to use pathscale.
# An example of this is the lynx_pathscale Macros file.
SFC            := pathf90
SCC            := pathcc
MPIFC            := mpif90
MPICC            := mpicc

#=====================================================
# GENERIC_USER
# The netcdf and mpi paths need to be set somewhere.  In CESM, this
# is normally done by setting the NETCDF_PATH and MPICH_PATH
# variables in this Macros file.  But they could also be set in the 
# default user paths, by an explicit addition to the local path 
# in the env_mach_specific file, or via setting NETCDF_PATH 
# and MPICH_PATH environment variables in the env_mach_specific file.  
# Also, review the relative paths of the INC_, LIB_, and MOD_ paths
# below.  Ignore PNETCDF stuff initially, it's not required.  

ifeq ($(strip $(NETCDF_PATH)),)
   # Note that NETCDF_LOCAL is assumed to have been obtained from invoking modules
   NETCDF_PATH   := $(NETCDF_LOCAL)
endif
INC_NETCDF    := $(NETCDF_PATH)/include
LIB_NETCDF    := $(NETCDF_PATH)/lib
MOD_NETCDF    := $(NETCDF_PATH)/include
ifeq ($(strip $(MPICH_PATH)),)
   # Note that MPIPATH_LOCAL is assumed to have been obtained from invoking modules
   MPICH_PATH := $(MPIPATH_LOCAL)
endif
ifeq ($(USE_MPISERIAL),TRUE)
   INC_MPI    := $(CODEROOT)/utils/mct/mpi-serial
   LIB_MPI    := 
else
   INC_MPI    := $(MPICH_PATH)/include
   LIB_MPI    := $(MPICH_PATH)/lib
endif
MPI_LIB_NAME  := mpich
PNETCDF_PATH  :=
INC_PNETCDF   :=
LIB_PNETCDF   := 
LAPACK_LIBDIR := 
#=====================================================

CFLAGS        := 
FIXEDFLAGS    := 
FREEFLAGS     := 
FFLAGS        :=  -extend_source -ftpp -fno-second-underscore
FFLAGS_OPT    := -O
FFLAGS_NOOPT  := $(FFLAGS) -O0
LDFLAGS       := 
AR            := ar
MOD_SUFFIX    := mod
CONFIG_SHELL  :=
FPPDEFS := $(CPPDEFS)
#===============================================================================
# Set include paths (needed after override for any model specific builds below)
#===============================================================================

INCLDIR := -I. 
ifneq ($(strip $(INC_NETCDF)),)
INCLDIR += -I$(INC_NETCDF)
endif
ifneq ($(strip $(MOD_NETCDF)),)
INCLDIR += -I$(MOD_NETCDF)
endif
ifneq ($(strip $(INC_MPI)),)
INCLDIR += -I$(INC_MPI)
endif 
ifneq ($(strip $(INC_PNETCDF)),)
INCLDIR += -I$(INC_PNETCDF)
endif

#===============================================================================
# Set model and other specific options
# NOTE - all CPPDEFS options must be defined before this point
#===============================================================================

ifeq ($(DEBUG),TRUE)
  FFLAGS       += -g -trapuv -Wuninitialized
  FFLAGS_NOOPT += -g -trapuv -Wuninitialized
else
  FFLAGS += $(FFLAGS_OPT)
endif

ifeq ($(compile_threaded), true)
  FFLAGS       += -mp
  FFLAGS_NOOPT += -mp
  CFLAGS       += -mp
  LDFLAGS      += -mp
endif


